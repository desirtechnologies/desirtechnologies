---
/**
 * @pragma component
 * @description Blog list component for displaying blog content
 * @category contour.components.blog
 */
import { Functional } from '@/modules/functional';
import { Pattern } from '@/modules/pattern';

interface BlogPost {
  title: string;
  excerpt?: string;
  description?: string;
  slug: string;
  publishDate?: Date;
  date?: string;
  author?: string;
  tags?: string[];
  minutesRead?: number;
  featured?: boolean;
}

interface Props {
  title?: string;
  posts?: BlogPost[];
  featuredOnly?: boolean;
  data?: any;
}

const { 
  title = 'Blog',
  posts = [],
  featuredOnly = false,
  data = {}
} = Astro.props;

// Combine items from props and data
const allPosts = [...posts, ...(data.posts || [])];

// Apply filtering if needed
const displayPosts = featuredOnly 
  ? allPosts.filter(post => post.featured) 
  : allPosts;

// Format date helper
function formatDate(dateString?: string | Date): string {
  if (!dateString) return '';
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}
---

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
  <div class="text-center mb-12">
    <h1 class="text-4xl font-bold text-gray-900 mb-4">{title}</h1>
    {data.description && <p class="text-xl text-gray-600">{data.description}</p>}
  </div>

  <div class="grid grid-cols-1 gap-10">
    {displayPosts.map((post: BlogPost) => (
      <div class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300">
        <div class="p-6">
          <div class="flex flex-col md:flex-row md:justify-between md:items-start gap-4 mb-4">
            <h2 class="text-2xl font-bold text-gray-900">
              <a href={`/blog/${post.slug}`} class="hover:text-blue-600 transition-colors">
                {post.title}
              </a>
            </h2>
            
            <div class="flex items-center text-sm text-gray-500">
              {(post.publishDate || post.date) && (
                <span class="flex items-center mr-4">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                  </svg>
                  {formatDate(post.publishDate || post.date)}
                </span>
              )}
              
              {post.author && (
                <span class="flex items-center mr-4">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                  </svg>
                  {post.author}
                </span>
              )}
              
              {post.minutesRead && (
                <span class="flex items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  {post.minutesRead} min read
                </span>
              )}
            </div>
          </div>
          
          <p class="text-gray-600 mb-4">{post.excerpt || post.description}</p>
          
          {post.tags && post.tags.length > 0 && (
            <div class="mt-4 mb-6">
              <div class="flex flex-wrap gap-2">
                {post.tags.map((tag: string) => (
                  <span class="bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded-full">
                    #{tag}
                  </span>
                ))}
              </div>
            </div>
          )}
          
          <div class="mt-6">
            <a 
              href={`/blog/${post.slug}`} 
              class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
            >
              Read More
            </a>
          </div>
        </div>
      </div>
    ))}
  </div>
  
  {displayPosts.length === 0 && (
    <div class="text-center py-12">
      <p class="text-gray-500">No blog posts found.</p>
    </div>
  )}
</div>
