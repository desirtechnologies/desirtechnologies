# Architecture and Integration Logic for Composio + Notion via MCP Servers

[meta]
description = "POC architecture for integrating Composio and Notion via MCP servers. Expressed in a logic/formulaic TOML format for clarity and future automation."
purpose = "Enable automated, composable workflows between Composio and Notion using MCP (Multi-Cloud Platform) servers."

# Define the core services involved
[services]
composio = { type = "integration_platform", endpoint = "https://api.composio.com", auth = "OAuth2" }
notion = { type = "knowledge_base", endpoint = "https://api.notion.com/v1", auth = "OAuth2" }
mcp_server = { type = "orchestration_layer", endpoint = "https://mcp.example.com", auth = "APIKey" }

# Define connectors (MCP modules or APIs that bridge services)
[connectors]
composio_mcp = { source = "composio", target = "mcp_server", protocol = "REST", direction = "bidirectional" }
notion_mcp = { source = "notion", target = "mcp_server", protocol = "REST", direction = "bidirectional" }

# Define logic flows (formulas for how data/actions propagate)
[[flows]]
name = "sync_notion_to_composio"
trigger = "notion.page.updated"
actions = [
  "mcp_server.fetch(notion.page)",
  "composio.create_or_update_task(data=notion.page)"
]
logic = "If a Notion page is updated, MCP fetches the page and creates/updates a corresponding task in Composio."

[[flows]]
name = "sync_composio_to_notion"
trigger = "composio.task.completed"
actions = [
  "mcp_server.fetch(composio.task)",
  "notion.update_page(data=composio.task)"
]
logic = "If a Composio task is completed, MCP fetches the task and updates the related Notion page."

# Optional: Logic formulas for extensibility
[logic_formulas]
# Example: Data propagation rule
notion_to_composio = "∀page ∈ Notion, if updated(page), then ∃task ∈ Composio: sync(page, task)"
composio_to_notion = "∀task ∈ Composio, if completed(task), then update(related_page(task), task.data)"

# Optional: Deployment and security notes
[deployment]
strategy = "Astro site, Node.js, deployed via Netlify and Windsurf"
env = ["NODE_ENV=production", "MCP_API_KEY=***", "COMPOSIO_CLIENT_ID=***", "NOTION_CLIENT_SECRET=***"]

[security]
principles = ["OAuth2 for service auth", "API keys for MCP", "Least privilege", "Audit logging enabled"]

# Reserved for future expansion: error handling, retries, multi-tenancy, etc.