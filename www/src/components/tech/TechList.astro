---
/**
 * @pragma component
 * @description Tech list component for displaying tech content
 * @category contour.components.tech
 */
import { Functional } from '@/modules/functional';
import { Pattern } from '@/modules/pattern';

interface TechItem {
  title: string;
  description: string;
  slug: string;
  technologies?: string[];
  complexity?: 'beginner' | 'intermediate' | 'advanced';
  featured?: boolean;
}

interface Props {
  title?: string;
  items?: TechItem[];
  featuredOnly?: boolean;
  data?: any;
}

const { 
  title = 'Technology',
  items = [],
  featuredOnly = false,
  data = {}
} = Astro.props;

// Combine items from props and data
const allItems = [...items, ...(data.items || [])];

// Apply filtering if needed
const displayItems = featuredOnly 
  ? allItems.filter(item => item.featured) 
  : allItems;

// Level badge helper
function getComplexityBadge(level?: string) {
  return Pattern.match(level)
    .with('beginner', () => 'bg-green-100 text-green-800')
    .with('intermediate', () => 'bg-blue-100 text-blue-800')
    .with('advanced', () => 'bg-purple-100 text-purple-800')
    .otherwise(() => 'bg-gray-100 text-gray-800');
}
---

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
  <div class="text-center mb-12">
    <h1 class="text-4xl font-bold text-gray-900 mb-4">{title}</h1>
    {data.description && <p class="text-xl text-gray-600">{data.description}</p>}
  </div>

  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
    {displayItems.map((item: TechItem) => (
      <div class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300">
        <div class="p-6">
          <div class="flex justify-between items-start mb-4">
            <h2 class="text-2xl font-bold text-gray-900 mb-2">
              <a href={`/tech/${item.slug}`} class="hover:text-blue-600 transition-colors">
                {item.title}
              </a>
            </h2>
            {item.complexity && (
              <span class={`text-xs px-2 py-1 rounded-full ${getComplexityBadge(item.complexity)}`}>
                {item.complexity}
              </span>
            )}
          </div>
          
          <p class="text-gray-600 mb-4">{item.description}</p>
          
          {item.technologies && item.technologies.length > 0 && (
            <div class="mt-4">
              <div class="flex flex-wrap gap-2">
                {item.technologies.map((tech: string) => (
                  <span class="bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded-full">
                    {tech}
                  </span>
                ))}
              </div>
            </div>
          )}
          
          <div class="mt-6">
            <a 
              href={`/tech/${item.slug}`} 
              class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
            >
              Read More
            </a>
          </div>
        </div>
      </div>
    ))}
  </div>
  
  {displayItems.length === 0 && (
    <div class="text-center py-12">
      <p class="text-gray-500">No technology articles found.</p>
    </div>
  )}
</div>
