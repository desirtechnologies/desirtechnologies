---
import config from "@/config/config.json";
import { getIndex, getEntries } from "@lib/contentParser";
import { sortByDate } from "@lib/sortFunctions";
import type { RecipesEntry } from "@/types";
import CollectionLayout from "@components/recipes/CollectionLayout.astro";

export async function getStaticPaths() {
  const entries = (await getEntries("recipes", sortByDate)) as RecipesEntry[];
  const pageCount = Math.ceil(entries.length / config.settings.recipe_pagination);
  const paths = [];

  for (let i = 1; i < pageCount; i++) {
    paths.push({
      params: {
        slug: (i + 1).toString(),
      },
    });
  }
  return paths;
}

const entryIndex = (await getIndex("recipes")) as RecipesEntry;
const entries = (await getEntries("recipes", sortByDate)) as RecipesEntry[];

const { slug } = Astro.params;
const currentPageIndex = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const pageCount = Math.ceil(entries.length / config.settings.recipe_pagination);
const indexOfLastEntry = currentPageIndex * config.settings.recipe_pagination;
const indexOfFirstEntry = indexOfLastEntry - config.settings.recipe_pagination;
const currentEntries = entries.slice(indexOfFirstEntry, indexOfLastEntry);
---

<CollectionLayout
  entryIndex={entryIndex}
  entries={currentEntries}
  pageIndex={currentPageIndex}
  pageCount={pageCount}
/>
